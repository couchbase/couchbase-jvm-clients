<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.couchbase.client</groupId>
        <artifactId>couchbase-jvm-clients</artifactId>
        <version>1.10.5-SNAPSHOT</version>
    </parent>

    <artifactId>scala-client_${scala.compat.version}</artifactId>
    <version>1.1.5-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Couchbase Scala SDK</name>
    <description>The official Couchbase Scala SDK</description>

    <dependencies>
        <!-- External, Required Dependencies -->
        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>core-io</artifactId>
        </dependency>

        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>scala-implicits_${scala.compat.version}</artifactId>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-scala-extensions_${scala.compat.version}</artifactId>
            <version>0.7.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.plokhotnyuk.jsoniter-scala</groupId>
            <artifactId>jsoniter-scala-core_${scala.compat.version}</artifactId>
            <version>2.1.6</version>
        </dependency>

        <dependency>
            <groupId>com.github.plokhotnyuk.jsoniter-scala</groupId>
            <artifactId>jsoniter-scala-macros_${scala.compat.version}</artifactId>
            <version>2.1.6</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-java8-compat_${scala.compat.version}</artifactId>
            <version>0.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-collection-compat_${scala.compat.version}</artifactId>
            <version>2.1.3</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_${scala.compat.version}</artifactId>
            <version>1.14.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>test-utils</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>3.6.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_${scala.compat.version}</artifactId>
            <version>3.6.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>3.6.7</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>jawn-ast_${scala.compat.version}</artifactId>
            <version>0.14.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>jawn-ast_${scala.compat.version}</artifactId>
            <version>0.14.3</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.compat.version}</artifactId>
            <version>${jackson.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.compat.version}</artifactId>
            <version>${jackson.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- We need 2 profile scala_2.13 & scala_NOT_2.13 to Cross-building custom scala collections.
                 See https://docs.scala-lang.org/overviews/core/custom-collections.html#appendix-cross-building-custom-collections -->
            <id>scala_2.13</id>
            <activation>
                <property>
                    <name>scala.compat.version</name>
                    <value>2.13</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/scala-2.13+</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>scala_NOT_2.13</id>
            <activation>
                <property>
                    <name>scala.compat.version</name>
                    <value>!2.13</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/scala-2.13-</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>scala_2.11</id>
            <activation>
                <property>
                    <name>scala.compat.version</name>
                    <value>2.11</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.lihaoyi</groupId>
                    <artifactId>upickle_${scala.compat.version}</artifactId>
                    <version>0.7.4</version>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-core_${scala.compat.version}</artifactId>
                    <version>0.11.2</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-core_${scala.compat.version}</artifactId>
                    <version>0.11.2</version>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-generic_${scala.compat.version}</artifactId>
                    <version>0.11.2</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-parser_${scala.compat.version}</artifactId>
                    <version>0.11.2</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_${scala.compat.version}</artifactId>
                    <version>2.7.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_${scala.compat.version}</artifactId>
                    <version>2.7.4</version>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>scala_NOT_2.11</id>
            <activation>
                <property>
                    <name>scala.compat.version</name>
                    <value>!2.11</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.lihaoyi</groupId>
                    <artifactId>upickle_${scala.compat.version}</artifactId>
                    <version>0.9.8</version>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-core_${scala.compat.version}</artifactId>
                    <version>0.12.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-core_${scala.compat.version}</artifactId>
                    <version>0.12.3</version>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-generic_${scala.compat.version}</artifactId>
                    <version>0.12.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-parser_${scala.compat.version}</artifactId>
                    <version>0.12.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_${scala.compat.version}</artifactId>
                    <version>2.8.1</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_${scala.compat.version}</artifactId>
                    <version>2.8.1</version>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/integrationTest/resources</directory>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.3.1</version>

                <configuration>
                    <args>
                        <!--Required for Scala 2.11 build, this enables support for Java SAM.  This is on by default in-->
                        <!--Scala 2.12+ -->
                        <arg>-Xexperimental</arg>
                        <arg>-language:postfixOps</arg>
                        <arg>-target:jvm-1.8</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                </configuration>

                <!-- scala-client is not a mixed Scala/Java module,
                 so we don't need re-assign the goals' phase as describing here:
                 https://stackoverflow.com/q/33836905/457612 -->
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.antipathy</groupId>
                <!-- use mvn-scalafmt_2.13 for all scala.compat.version -->
                <artifactId>mvn-scalafmt_2.13</artifactId>
                <version>1.0.3</version>
                <configuration>
                    <configLocation>${project.basedir}/../.scalafmt.conf</configLocation>
                    <sourceDirectories>
                        <param>${project.basedir}/src/main/scala</param>
                        <param>${project.basedir}/src/main/scala-2.13-</param>
                        <param>${project.basedir}/src/main/scala-2.13+</param>
                    </sourceDirectories>
                    <testSourceDirectories>
                        <param>${project.basedir}/src/test/scala</param>
                        <param>${project.basedir}/src/integrationTest/scala</param>
                    </testSourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <createSourcesJar>true</createSourcesJar>
                    <shadeSourcesContent>true</shadeSourcesContent>
                    <relocations>
                        <!--<relocation>-->
                            <!--<pattern>com.github.plokhotnyuk</pattern>-->
                            <!--<shadedPattern>com.couchbase.client.scala.deps.plokhotnyuk</shadedPattern>-->
                        <!--</relocation>-->
                        <relocation>
                            <pattern>scala.compat.java8</pattern>
                            <shadedPattern>com.couchbase.client.scala.deps.scala.compat.java8</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>scala.concurrent.java8</pattern>
                            <shadedPattern>com.couchbase.client.scala.deps.scala.concurrent.java8</shadedPattern>
                        </relocation>
                    </relocations>

                    <artifactSet>
                        <includes>
                            <include>com.couchbase.client:scala-implicits_${scala.compat.version}</include>
                            <include>org.scala-lang.modules:scala-java8-compat_${scala.compat.version}</include>
                        </includes>
                        <excludes>
                            <!--<exclude>io.projectreactor:reactor-scala-extensions_${scala.compat.version}</exclude>-->
                            <exclude>com.couchbase.client:core-io</exclude>
                            <!--Ideally we would shade and relocate this, but hit issues with that approach-->
                            <exclude>com.github.plokhotnyuk.jsoniter-scala:jsoniter-scala-core_${scala.compat.version}</exclude>
                            <exclude>com.github.plokhotnyuk.jsoniter-scala:jsoniter-scala-macros_${scala.compat.version}</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resources>
                                        <resource>META-INF/services/com.fasterxml.jackson.core.JsonFactory</resource>
                                    </resources>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <!-- Bind to phase `package` instead of `process-resources`
                             to prevent conflict with maven-shade-plugin.
                             See https://stackoverflow.com/q/52552329/457612 -->
                        <phase>package</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <!-- use jar-no-fork instead of jar goal so that
                                 mvn-scalafmt:format don't need to run an extra time -->
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integrationTest/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resource-as-test-resource</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>>src/integrationTest/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals><goal>create</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <shortRevisionLength>8</shortRevisionLength>
                    <attach>true</attach>
                    <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                            <Automatic-Module-Name>com.couchbase.client.scala</Automatic-Module-Name>
                        </manifestEntries>
                        <manifestSections>
                            <manifestSection>
                                <!-- the part after couchbase- needs to match with the agent title in the env -->
                                <name>couchbase-scala</name>
                                <manifestEntries>
                                    <Impl-Version>${project.version}</Impl-Version>
                                    <Impl-Git-Revision>${buildNumber}</Impl-Git-Revision>
                                </manifestEntries>
                            </manifestSection>
                        </manifestSections>
                    </archive>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>