<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.couchbase.client</groupId>
        <artifactId>couchbase-jvm-clients</artifactId>
        <version>1.16.6</version><!--REL-->
    </parent>

    <artifactId>scala-implicits_${scala.compat.version}</artifactId>
    <version>1.7.6</version><!--REL-->
    <packaging>jar</packaging>

    <name>Couchbase Scala SDK Implicits</name>
    <description>The official Couchbase Scala SDK (Implicits)</description>

    <dependencies>
        <!-- External, Required Dependencies -->
        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>core-io</artifactId>
            <!--Jump through some hoops to get core-io not shared in scala-client-->
            <scope>provided</scope>
        </dependency>

        <!--There's a discussion here https://www.scala-lang.org/old/node/6737.html on whether
        scala-library should be provided scope, and the feeling seems to be no, to detect
        incompatibilities with the app's version-->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.compat.library.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-collection-compat_${scala.compat.version}</artifactId>
            <version>${scala.collection-compat.version}</version>
        </dependency>

        <!--Jsoniter offers very fast conversion of case classes to/from Array[Byte]-->
        <dependency>
            <groupId>com.github.plokhotnyuk.jsoniter-scala</groupId>
            <artifactId>jsoniter-scala-core_${scala.compat.version}</artifactId>
            <version>${scala.jsoniter-scala.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.plokhotnyuk.jsoniter-scala</groupId>
            <artifactId>jsoniter-scala-macros_${scala.compat.version}</artifactId>
            <version>${scala.jsoniter-scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--Needed only for experimenting with replacing Jackson with jsoniter currently, though could expose support-->
        <dependency>
            <groupId>com.jsoniter</groupId>
            <artifactId>jsoniter</artifactId>
            <version>${scala.jsoniter.version}</version>
            <optional>true</optional>
        </dependency>

        <!--Dependencies that are optional.  If app has them in classpath and uses them, then we support them.-->

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_${scala.compat.version}</artifactId>
            <version>${scala.json4s.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>${scala.json4s.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>jawn-ast_${scala.compat.version}</artifactId>
            <version>${scala.jawn.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>upickle_${scala.compat.version}</artifactId>
            <version>${scala.upickle.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.circe</groupId>
            <artifactId>circe-generic_${scala.compat.version}</artifactId>
            <version>${scala.circe.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.circe</groupId>
            <artifactId>circe-parser_${scala.compat.version}</artifactId>
            <version>${scala.circe.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-json_${scala.compat.version}</artifactId>
            <version>${scala.play-json.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>test-utils</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <configuration>
                    <args>
                        <arg>-target:jvm-1.8</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                </configuration>

                <!--This is a solution for mixed Scala/Java projects
                    See: https://stackoverflow.com/q/33836905/457612 -->
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <!-- use jar-no-fork instead of jar goal so that
                                 mvn-scalafmt:format don't need to run an extra time -->
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.antipathy</groupId>
                <!-- use mvn-scalafmt_2.13 for all scala.compat.version -->
                <artifactId>mvn-scalafmt_2.13</artifactId>
                <version>${mvn-scalafmt.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/../.scalafmt.conf</configLocation>
                    <!-- there are no tests for this project currently, disabling to remove a warning about no sourcess -->
                    <skipTestSources>true</skipTestSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Add src/main/java to source-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
