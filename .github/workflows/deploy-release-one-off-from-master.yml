name: Maven Deploy Release from master

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Version. Must match version of master.
        required: true
        default: '3.9.0'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
#
#      - name: Verify the ref is actually a tag
#        run: git tag --list | grep --line-regexp ${{ inputs.tag }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

          server-id: 'central'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build and deploy to Maven Central
        run: .github/scripts/deploy.sh release
        env:
          MAVEN_USERNAME: ${{ vars.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.SDK_ROBOT_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ''

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::786014483886:role/SDK_GHA
          aws-region: us-west-1

      - name: Upload API documentation
        run: |
          function upload() {
            aws s3 cp --recursive --acl public-read $1/$2 s3://docs.couchbase.com/sdk-api/couchbase-$1-${{ inputs.tag }}
          }
          upload "core-io" "target/reports/apidocs"
          upload "java-client" "target/reports/apidocs"
          upload "scala-client" "target/site/scaladocs"
          upload "kotlin-client" "target/dokka"
          upload "columnar-java-client" "target/reports/apidocs"

      - name: Upload Java SDK archive
        run: |
          VERS=${{ inputs.tag }}
          ARCHIVE_DIR=java-client/target/Couchbase-Java-Client-${VERS}
          for module in core-io java-client metrics-opentelemetry metrics-micrometer; do
            cp -v ${module}/target/${module}*.jar ${ARCHIVE_DIR}
            cp -v ${module}/.flattened-pom.xml ${ARCHIVE_DIR}/${module}-${VERS}.pom
          done      
          zip --junk-paths ${ARCHIVE_DIR}.zip ${ARCHIVE_DIR}/*
          aws s3 cp --acl public-read ${ARCHIVE_DIR}.zip s3://packages.couchbase.com/clients/java/${VERS}/
