<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.couchbase.client</groupId>
    <artifactId>core-io-deps</artifactId>
    <version>1.7.6-SNAPSHOT</version><!--REL--><!-- this cannot use variable ${core-io-deps.version} -->
    <packaging>jar</packaging>

    <name>Couchbase JVM Core IO Dependencies</name>
    <description>Shadowing dependencies for sanity's sake</description>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- When bumping this, it may be necessary to bump the grpc-netty dependency in protostellar/pom.xml also -->
        <netty.version>4.1.112.Final</netty.version>
        <jackson.version>2.17.2</jackson.version>

        <shaded.package.prefix>com.couchbase.client.core.deps.</shaded.package.prefix>
        <shaded.native.lib.prefix>com_couchbase_client_core_deps_</shaded.native.lib.prefix>

        <native.folder>${project.build.directory}/native</native.folder>
        <native.epoll-x86_64.original>libnetty_transport_native_epoll_x86_64.so</native.epoll-x86_64.original>
        <native.epoll-x86_64.renamed>lib${shaded.native.lib.prefix}netty_transport_native_epoll_x86_64.so</native.epoll-x86_64.renamed>
        <native.epoll-aarch_64.original>libnetty_transport_native_epoll_aarch_64.so</native.epoll-aarch_64.original>
        <native.epoll-aarch_64.renamed>lib${shaded.native.lib.prefix}netty_transport_native_epoll_aarch_64.so</native.epoll-aarch_64.renamed>
        <native.kqueue-x86_64.original>libnetty_transport_native_kqueue_x86_64.jnilib</native.kqueue-x86_64.original>
        <native.kqueue-x86_64.renamed>lib${shaded.native.lib.prefix}netty_transport_native_kqueue_x86_64.jnilib</native.kqueue-x86_64.renamed>
        <native.kqueue-aarch_64.original>libnetty_transport_native_kqueue_aarch_64.jnilib</native.kqueue-aarch_64.original>
        <native.kqueue-aarch_64.renamed>lib${shaded.native.lib.prefix}netty_transport_native_kqueue_aarch_64.jnilib</native.kqueue-aarch_64.renamed>
        <native.tcnative-linux-x86_64.original>libnetty_tcnative_linux_x86_64.so</native.tcnative-linux-x86_64.original>
        <native.tcnative-linux-x86_64.renamed>lib${shaded.native.lib.prefix}netty_tcnative_linux_x86_64.so</native.tcnative-linux-x86_64.renamed>
        <native.tcnative-linux-aarch_64.original>libnetty_tcnative_linux_aarch_64.so</native.tcnative-linux-aarch_64.original>
        <native.tcnative-linux-aarch_64.renamed>lib${shaded.native.lib.prefix}netty_tcnative_linux_aarch_64.so</native.tcnative-linux-aarch_64.renamed>
        <native.tcnative-osx-x86_64.original>libnetty_tcnative_osx_x86_64.jnilib</native.tcnative-osx-x86_64.original>
        <native.tcnative-osx-x86_64.renamed>lib${shaded.native.lib.prefix}netty_tcnative_osx_x86_64.jnilib</native.tcnative-osx-x86_64.renamed>
        <native.tcnative-osx-aarch_64.original>libnetty_tcnative_osx_aarch_64.jnilib</native.tcnative-osx-aarch_64.original>
        <native.tcnative-osx-aarch_64.renamed>lib${shaded.native.lib.prefix}netty_tcnative_osx_aarch_64.jnilib</native.tcnative-osx-aarch_64.renamed>
        <native.tcnative-windows-x86_64.original>netty_tcnative_windows_x86_64.dll</native.tcnative-windows-x86_64.original>
        <native.tcnative-windows-x86_64.renamed>${shaded.native.lib.prefix}netty_tcnative_windows_x86_64.dll</native.tcnative-windows-x86_64.renamed>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Internal Dependencies -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-classes-kqueue</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-classes-epoll</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative-classes</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jctools</groupId>
            <artifactId>jctools-core</artifactId>
            <version>4.0.5</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-afterburner</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>3.6.0</version>
            <exclusions>
                <!-- Exclude SLF4J; we'll declare it separately as a dependency of core-io -->
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.iq80.snappy</groupId>
            <artifactId>snappy</artifactId>
            <version>0.5</version>
        </dependency>
        <dependency>
            <groupId>org.latencyutils</groupId>
            <artifactId>LatencyUtils</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <!-- Transitive dependency of LatencyUtils. Force latest version. -->
            <groupId>org.hdrhistogram</groupId>
            <artifactId>HdrHistogram</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>com.couchbase.client</groupId>
            <artifactId>protostellar</artifactId>
            <!-- This version number never changes and should include the SNAPSHOT. -->
            <version>9999.0-SNAPSHOT</version>
            <exclusions>
                <!-- Ditch annotations that come in via gRPC and Guava,
                     but aren't required at runtime.
                     https://github.com/google/guava/issues/2824 -->
                <exclusion>
                    <groupId>com.google.android</groupId>
                    <artifactId>annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.annotation</groupId>
                    <artifactId>javax.annotation-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>listenablefuture</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.errorprone</groupId>
                    <artifactId>error_prone_annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.j2objc</groupId>
                    <artifactId>j2objc-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-transport-native-kqueue</artifactId>
                                    <classifier>osx-x86_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-transport-native-kqueue</artifactId>
                                    <classifier>osx-aarch_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-transport-native-epoll</artifactId>
                                    <classifier>linux-x86_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-transport-native-epoll</artifactId>
                                    <classifier>linux-aarch_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-tcnative-boringssl-static</artifactId>
                                    <classifier>linux-x86_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-tcnative-boringssl-static</artifactId>
                                    <classifier>linux-aarch_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-tcnative-boringssl-static</artifactId>
                                    <classifier>osx-x86_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-tcnative-boringssl-static</artifactId>
                                    <classifier>osx-aarch_64</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>io.netty</groupId>
                                    <artifactId>netty-tcnative-boringssl-static</artifactId>
                                    <classifier>windows-x86_64</classifier>
                                </artifactItem>
                            </artifactItems>
                            <includes>META-INF/native/*</includes>
                            <outputDirectory>${native.folder}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <relocations>
                        <relocation>
                            <pattern>io.netty</pattern>
                            <shadedPattern>${shaded.package.prefix}io.netty</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.fasterxml.jackson</pattern>
                            <shadedPattern>${shaded.package.prefix}com.fasterxml.jackson</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.xbill.DNS</pattern>
                            <shadedPattern>${shaded.package.prefix}org.xbill.DNS</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.iq80.snappy</pattern>
                            <shadedPattern>${shaded.package.prefix}org.iq80.snappy</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.LatencyUtils</pattern>
                            <shadedPattern>${shaded.package.prefix}org.LatencyUtils</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.HdrHistogram</pattern>
                            <shadedPattern>${shaded.package.prefix}org.HdrHistogram</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.jctools</pattern>
                            <shadedPattern>${shaded.package.prefix}org.jctools</shadedPattern>
                        </relocation>

                        <!-- gRPC and associated cruft -->
                        <relocation>
                            <pattern>io.grpc</pattern>
                            <shadedPattern>${shaded.package.prefix}io.grpc</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.google</pattern>
                            <shadedPattern>${shaded.package.prefix}com.google</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>io.perfmark</pattern>
                            <shadedPattern>${shaded.package.prefix}io.perfmark</shadedPattern>
                        </relocation>
                    </relocations>
                    <transformers>
                        <!-- Required for gRPC -->
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>

                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.epoll-x86_64.original}</file>
                            <resource>META-INF/native/${native.epoll-x86_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.epoll-aarch_64.original}</file>
                            <resource>META-INF/native/${native.epoll-aarch_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.kqueue-x86_64.original}</file>
                            <resource>META-INF/native/${native.kqueue-x86_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.kqueue-aarch_64.original}</file>
                            <resource>META-INF/native/${native.kqueue-aarch_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.tcnative-linux-x86_64.original}</file>
                            <resource>META-INF/native/${native.tcnative-linux-x86_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.tcnative-linux-aarch_64.original}</file>
                            <resource>META-INF/native/${native.tcnative-linux-aarch_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.tcnative-osx-x86_64.original}</file>
                            <resource>META-INF/native/${native.tcnative-osx-x86_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.tcnative-osx-aarch_64.original}</file>
                            <resource>META-INF/native/${native.tcnative-osx-aarch_64.renamed}</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <file>${native.folder}/META-INF/native/${native.tcnative-windows-x86_64.original}</file>
                            <resource>META-INF/native/${native.tcnative-windows-x86_64.renamed}</resource>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <artifact>dnsjava:dnsjava</artifact>
                            <excludes>
                                <!-- These localized messages are optional (See R.java) and aren't worth the trouble of relocating. -->
                                <resource>messages.properties</resource>
                                <!-- Avoid https://github.com/dnsjava/dnsjava/issues/329
                                     Also, we're not interested in overriding the JVM's default DNS lookup mechanisms;
                                     we only care about our own explicit DNS SRV lookups. -->
                                <exclude>META-INF/services/**</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <!-- gRPC: Don't want *.proto for common classes, since they're shaded -->
                                <exclude>google/</exclude>

                                <resource>META-INF/services/reactor.blockhound.integration.BlockHoundIntegration</resource>

                                <!-- Workaround for Shade plugin bug that causes module-info.class files in META-INF/versions
                                     to be retained. -->
                                <exclude>**/module-info.class</exclude>

                                <!-- Workaround for https://issues.apache.org/jira/browse/MSHADE-406
                                     Shade plugin doesn't fully relocate classes that live here.
                                     (The bytecode gets rewritten, but the filename does not.)
                                     Assume these classes are just optimizations that take advantage of
                                     features in newer version of Java; exclude them for now. -->
                                <exclude>META-INF/versions/**</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <createSourcesJar>true</createSourcesJar>
                    <shadeSourcesContent>true</shadeSourcesContent>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
